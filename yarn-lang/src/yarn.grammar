@top Script { statement+ }

statement {
    Node |
    NodeInfo |
    Letter  |
    Number |
    Comment
}

nodeContent {
    Name |
    Variable |
    VariableSet |
    IfBlock |
    // InlineIf |
    Letter |
    Option |
    Bracket |
    Function |
    Comment
}

Node {
    "---" nodeContent* "==="
}

NodeInfo {
    Letter ":"
}

Name {
    Letter ":"
}

Variable {
    "$" JoinedCharacter
}

Function {
    Letter "(" ")"
}

VariableSet {
    BeginStatement "set" Variable "to" (Number | String | Boolean ) EndStatement
}

IfBlock {
    BeginStatement "if" (Variable | Number | Function) Operator (Variable | Number) EndStatement nodeContent* BeginStatement "endif" EndStatement
}

InlineIf {
    BeginStatement "if" (Variable | Number) Operator (Variable | Number) EndStatement
}



@skip {Comment} {
    Space {
      " "+
    }
}

@tokens {
    space { @whitespace+ }
    Number { @digit+ }
    Letter { @asciiLetter+ }
    String { $["] !["\n]+ $["]}
    Boolean { "true" | "false" }
    JoinedCharacter { ($[a-z] | "_" | $[A-Z] | $[0-9])+ }
    Option { "->" }
    BeginStatement { "<<" }
    EndStatement { ">>" }
    Keyword { "if" | "set" | "else" | "endif" | "elseif" }
    Operator { 
        "is" | "to" | "not" | "ne" | "eq" | "le" | "ge" | "gt" | "lt "| "and" | "or" |
        "+" | "-" | "*/" | "!" | "<" | ">" | "=" | "==" | "<=" | ">="
    }
    OpenBrace { "{" }
    CloseBrace { "}" }
    Bracket { "]" | "["}
    Comment { "//" ![\n]* }
    @precedence{ Comment Operator Letter Number}
}